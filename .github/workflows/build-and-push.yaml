name: Build and Push

on:
  push:
    tags: ['v*']
  pull_request:
    branches: [main]
    paths-ignore:
      - 'helm/**'
      - '**.md'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Helm chart version
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}

          # Update appVersion in Chart.yaml to match the new release
          sed -i "s/^appVersion: .*$/appVersion: \"${VERSION}\"/" helm/Chart.yaml

          # Update values.yaml default image tag
          sed -i "s/tag: .*$/tag: \"${VERSION}\"/" helm/values.yaml

          # Configure git with a personal access token that has repo scope
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Create and checkout a new branch
          git checkout -b update-helm-chart-${VERSION}

          # Add changed files and commit
          git add helm/Chart.yaml helm/values.yaml
          git commit -m "Update Helm chart to version ${VERSION}" || echo "No changes to commit"

          # Push to the new branch using the token for authentication
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin update-helm-chart-${VERSION}

          # Create a pull request using the GitHub CLI
          echo "Creating pull request..."
          gh auth login --with-token <<< "${GITHUB_TOKEN}"
          gh pr create --title "Update Helm chart to version ${VERSION}" \
                      --body "Automatically updates Helm chart to version ${VERSION}" \
                      --base main \
                      --head update-helm-chart-${VERSION} || echo "Failed to create PR"
